_Observe2PlayersXaml = 
[[<Grid	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:sys="clr-namespace:System;assembly=mscorlib">
	<Grid.Resources>
		<DataTemplate x:Key="ObserverUIBackgroundAndBorder">
			<Grid>
                <!-- Background & Border -->
        		<Rectangle Fill="{DynamicResource TertiaryColorGradientVerticalBrush}" />
				<ContentControl Template="{StaticResource CanvasBackgroundBox}" />
            	<Border BorderThickness="2" BorderBrush="{Binding [color]}"/>
			</Grid>
		</DataTemplate>
		
        <DataTemplate x:Key="ObserverUIResource">
            <Grid Width="120">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Image 	Grid.RowSpan="2"
                    	Height="40"
                    	HorizontalAlignment="Center"
                    	VerticalAlignment="Center"
                    	Source="{Binding [icon]}" />
                <TextBlock Grid.RowSpan="2" Margin="5,0,0,0"
						Style="{StaticResource HUDGray80ParagraphTextBlock12ptStyle}"
                    	Text="{Binding [workers], Converter={StaticResource CastToIntOperator}}" />
                <TextBlock Grid.Column="1"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
						FontSize="18"
						Foreground="White"
                        Text="{Binding [amount], Converter={StaticResource CastToIntOperator}}" />
                <TextBlock Grid.Row="1" Grid.Column="1"
                        Style="{StaticResource HUDGray80ParagraphTextBlock12ptStyle}"
                        Text="{Binding [income]}" />
            </Grid>
        </DataTemplate>
		
		<DataTemplate x:Key="ObserverUIResourcesFGWS">
			<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
				
				<ContentControl	Grid.Column="0"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][food]}" />
				<ContentControl	Grid.Column="1"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][gold]}" />
				<ContentControl	Grid.Column="2"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][wood]}" />
				<ContentControl	Grid.Column="3"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][stone]}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIResourcesSWGF">
			<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
				
				<ContentControl	Grid.Column="0"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][stone]}" />
				<ContentControl	Grid.Column="1"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][wood]}" />
				<ContentControl	Grid.Column="2"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][gold]}" />
				<ContentControl	Grid.Column="3"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][food]}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIResourcesFWGS">
			<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
				
				<ContentControl	Grid.Column="0"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][food]}" />
				<ContentControl	Grid.Column="1"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][wood]}" />
				<ContentControl	Grid.Column="2"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][gold]}" />
				<ContentControl	Grid.Column="3"
						ContentTemplate="{StaticResource ObserverUIResource}"
						Content="{Binding [resources][stone]}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIHousing">
			<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40" />
                    <ColumnDefinition Width="80" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0"
						HorizontalAlignment="Right"
                        Height="32" Margin="0,-4,0,0"
                        Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_popcap.png"/>
                <TextBlock Grid.Column="1"
						HorizontalAlignment="Left" VerticalAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [populationVsMaximumPopulation]}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIWorkerPopulation">
			<Grid Width="120">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="1"
						HorizontalAlignment="Right"
                        Height="32" Margin="0,-4,0,0"
                        Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_villager.png"/>
                <TextBlock Grid.Column="2"
						HorizontalAlignment="Left" VerticalAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [workerPopulation], Mode=OneWay, Converter={StaticResource CastToIntOperator}}" />
                <Image Grid.Column="3" 
						HorizontalAlignment="Right"
                        Height="32" Margin="0,-4,0,0"
                        Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_idle_villager.png"/>
                <TextBlock Grid.Column="4"
						HorizontalAlignment="Left" VerticalAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [idleWorkerPopulation], Mode=OneWay, Converter={StaticResource CastToIntOperator}}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIMilitaryPopulation">
			<Grid Width="120">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>
                <Image Grid.Column="1"  
						HorizontalAlignment="Right"
                        Height="32" Margin="0,-4,0,0"
                        Source="pack://application:,,,/WPFGUI;component/icons/resources/resource_military.png"/>
                <TextBlock Grid.Column="2"
						HorizontalAlignment="Left" VerticalAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [militaryPopulation], Mode=OneWay, Converter={StaticResource CastToIntOperator}}" />
                <Image Grid.Column="3"
						HorizontalAlignment="Right"
                        Height="28"
                        Source="pack://application:,,,/WPFGUI;component/icons/races/common/buildings/siege_workshop.png"/>
                <TextBlock Grid.Column="4" 
						HorizontalAlignment="Left" VerticalAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [siegePopulation], Mode=OneWay, Converter={StaticResource CastToIntOperator}}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIRelics">
			<Grid Width="120">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="34" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="28" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="34" />
                </Grid.ColumnDefinitions>
				
                <Image Grid.Column="0"
                        Height="30" HorizontalAlignment="Right"
                        Source="pack://application:,,,/WPFGUI;component/icons/races/common/abilities/create_relic.png"/>
                <TextBlock Grid.Column="1"
                        VerticalAlignment="Center" TextAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [relics], Mode=OneWay, Converter={StaticResource CastToIntOperator}}" />
                <Image Grid.Column="2"
                        Height="20"
                        Source="pack://application:,,,/WPFGUI;component/icons/tooltip_arrow_right.png"/>
                <TextBlock Grid.Column="3"
                        VerticalAlignment="Center" TextAlignment="Center"
                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
                        Text="{Binding [relicsDeposited], Mode=OneWay, Converter={StaticResource CastToIntOperator}}" />
                <Image Grid.Column="4"
                        Height="30" HorizontalAlignment="Left"
                        Source="pack://application:,,,/WPFGUI;component/icons/races/common/abilities/deposit_relic.png"/>
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIPopulation">
			<Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
				
				<ContentControl	Grid.Column="0"
						ContentTemplate="{StaticResource ObserverUIHousing}"
						Content="{Binding}" />
				<ContentControl	Grid.Column="1"
						ContentTemplate="{StaticResource ObserverUIWorkerPopulation}"
						Content="{Binding}" />
				<ContentControl	Grid.Column="2"
						ContentTemplate="{StaticResource ObserverUIMilitaryPopulation}"
						Content="{Binding}" />
				<ContentControl	Grid.Column="3"
						ContentTemplate="{StaticResource ObserverUIRelics}"
						Content="{Binding}" />
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="ObserverUIPopulationReverse">
			<Grid HorizontalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
				
				<ContentControl	Grid.Column="0"
						ContentTemplate="{StaticResource ObserverUIRelics}"
						Content="{Binding}" />
				<ContentControl	Grid.Column="1"
						ContentTemplate="{StaticResource ObserverUIMilitaryPopulation}"
						Content="{Binding}" />
				<ContentControl	Grid.Column="2"
						ContentTemplate="{StaticResource ObserverUIWorkerPopulation}"
						Content="{Binding}" />
				<ContentControl	Grid.Column="3"
						ContentTemplate="{StaticResource ObserverUIHousing}"
						Content="{Binding}" />
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUiVictoryCountdowns">
	        <ItemsControl ItemsSource="{Binding [VictoryCountdownsContext]}">
	            <ItemsControl.ItemsPanel>
	                <ItemsPanelTemplate>
	                    <DockPanel/>
	                </ItemsPanelTemplate>
	            </ItemsControl.ItemsPanel>
				
			    <ItemsControl.ItemContainerStyle>
			      	<Style TargetType="ContentPresenter">
			        	<Setter Property="DockPanel.Dock" Value="Bottom"/>
			      	</Style>
			    </ItemsControl.ItemContainerStyle>
	
	            <ItemsControl.ItemTemplate>
	                <DataTemplate>
			            <Grid Width="100" Margin="0,2,0,0">
        					<Rectangle Fill="#80000000" Visibility="{Binding [ClosestTo0], Converter={StaticResource BoolToVis}}"/>
							<Border BorderThickness="2" Margin="2" BorderBrush="{StaticResource PrimaryColorLightBrush}"/>
							<Grid Margin="6">
				                <Image Height="24" Width="24"
				                    	HorizontalAlignment="Left"
				                    	Source="{Binding [Icon]}" />
				                <TextBlock
										HorizontalAlignment="Right"
				                        Style="{StaticResource nHUDTitleAltTextBlockStyle}"
				                        Text="{Binding [TimeRemaining], Converter={StaticResource ShorthandTimeFormat}}" />
							</Grid>
			            </Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIUpgradesQueued">
	        <ItemsControl ItemsSource="{Binding [upgradesQueued]}" Margin="-2,0,-2,0">
	            <ItemsControl.ItemsPanel>
	                <ItemsPanelTemplate>
	                    <DockPanel/>
	                </ItemsPanelTemplate>
	            </ItemsControl.ItemsPanel>
				
			    <ItemsControl.ItemContainerStyle>
			      	<Style TargetType="ContentPresenter">
			        	<Setter Property="DockPanel.Dock" Value="Left"/>
			      	</Style>
			    </ItemsControl.ItemContainerStyle>
	
	            <ItemsControl.ItemTemplate>
	                <DataTemplate>
						<Grid Margin="2,4,2,0">
							<Rectangle Width="{StaticResource HUDBuildQueueIconSize}"
           							Height="{StaticResource HUDBuildQueueIconSize}"
									Fill="{StaticResource ResearchButtonBgBrush}" />
							<Rectangle Width="{StaticResource HUDBuildQueueIconSize}"
           							Height="{StaticResource HUDBuildQueueIconSize}"
									Fill="{StaticResource ResearchLightButtonBgHighlightBrush}" />
							<Image	Width="{StaticResource HUDBuildQueueIconSize}"
           							Height="{StaticResource HUDBuildQueueIconSize}"
									Source="{Binding [icon]}"/>
							
						</Grid>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIUnits">
	        <ItemsControl ItemsSource="{Binding}">
	            <ItemsControl.ItemsPanel>
	                <ItemsPanelTemplate>
	                    <DockPanel/>
	                </ItemsPanelTemplate>
	            </ItemsControl.ItemsPanel>
				
			    <ItemsControl.ItemContainerStyle>
			      	<Style TargetType="ContentPresenter">
			        	<Setter Property="DockPanel.Dock" Value="Right"/>
			      	</Style>
			    </ItemsControl.ItemContainerStyle>
	
	            <ItemsControl.ItemTemplate>
	                <DataTemplate>
						<Grid Margin="2,4,2,0">
							<Rectangle Name="UnitBackground1"
									Width="{StaticResource HUDBuildQueueIconSize}"
           							Height="{StaticResource HUDBuildQueueIconSize}"
									Fill="{StaticResource MilitaryButtonBgBrush}" />
							<Rectangle Name="UnitBackground2"
									Width="{StaticResource HUDBuildQueueIconSize}"
           							Height="{StaticResource HUDBuildQueueIconSize}"
									Fill="{StaticResource MilitaryLightButtonBgHighlightBrush}" />
				
							<Image 
									Width="{StaticResource HUDBuildQueueIconSize}"
           							Height="{StaticResource HUDBuildQueueIconSize}"
									Source="{Binding [icon]}"/>
                            <TextBlock 
									VerticalAlignment="Top"
									HorizontalAlignment="Left"
									Style="{StaticResource HUDCommandCardButtonTextBlockStyle}"
                                	Text="{Binding [queued], Converter={StaticResource CastToIntOperator}}"
									Visibility="{Binding [queuedNot0], Converter={StaticResource BoolToVis}}" />
                            <TextBlock 
									VerticalAlignment="Bottom"
									HorizontalAlignment="Right"
									Style="{StaticResource HUDCommandCardButtonTextBlockStyle}"
                                	Text="{Binding [count], Converter={StaticResource CastToIntOperator}}"
									Visibility="{Binding [countNot0], Converter={StaticResource BoolToVis}}" />
							
						</Grid>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding [civil]}" Value="true">
        						<Setter TargetName="UnitBackground1" Property="Fill" Value="{StaticResource AbilityButtonBgBrush}"/>
        						<Setter TargetName="UnitBackground2" Property="Fill" Value="{StaticResource AbilityButtonBgHighlightBrush}"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ItemsControl.ItemTemplate>
			</ItemsControl>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIName">
			<Grid VerticalAlignment="Center">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				
	            <TextBlock Style="{StaticResource nHUDHeaderSmallTextBlockStyle}"
						Text="{Binding [name]}"/>
				
				<Rectangle Grid.Row="1" Fill="{Binding [color]}" Height="2"/>
	        </Grid>
		</DataTemplate>
		
        <LinearGradientBrush x:Key="ObserverUIBrushOpaqueLeftToRight" 
				StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0" />
            <GradientStop Offset="1" Color="#FF000000" />
        </LinearGradientBrush>
		
        <LinearGradientBrush x:Key="ObserverUIBrushOpaqueRightToLeft" 
				StartPoint="0,0" EndPoint="1,0">
            <GradientStop Offset="0" Color="#FF000000" />
            <GradientStop Offset="1" />
        </LinearGradientBrush>
		
		<DataTemplate x:Key="ObserverUIAge">
			<Grid>
				<Grid Height="68" Width="68" VerticalAlignment="Center"
						 Grid.Row="1">
	                <Image Height="68"
							Visibility="{Binding [isUpping], Converter={StaticResource BoolToVis}}"
							RenderTransformOrigin="0.5,0.5"
	                       	Source="pack://application:,,,/WPFGUI;component/icons/HUD/age/age_display_afford_circle_glow.png">
	                    <Image.RenderTransform>
	                        <RotateTransform x:Name="ObserverUIAgeUppingGlow" Angle="0" />
	                    </Image.RenderTransform>
	                </Image>
	
	                <!--  can afford next age circle  -->
	                <Image Height="68"
							Visibility="{Binding [isUpping], Converter={StaticResource BoolToVis}}"
							RenderTransformOrigin="0.5,0.5"
	                       	Source="pack://application:,,,/WPFGUI;component/icons/HUD/age/age_display_afford_circle.png">
	                    <Image.RenderTransform>
	                        <RotateTransform x:Name="ObserverUIAgeUppingCircle" Angle="0" />
	                    </Image.RenderTransform>
	                </Image>
					
	                <Image	Height="30"
							HorizontalAlignment="Center" VerticalAlignment="Center"
							Source="{Binding [ageIconForAnimation]}"/>
		        </Grid>
				
                <TextBlock Margin="0,-6,0,0"
                        VerticalAlignment="Top"
						HorizontalAlignment="Center"
						Style="{StaticResource HUDCommandCardButtonTextBlockStyle}"
                    	Text="{Binding [upAt], Converter={StaticResource ShorthandTimeFormat}}" />
				
                <ProgressBar Width="60" Height="8"
						Margin="0,0,0,-2"
                        VerticalAlignment="Bottom"
						HorizontalAlignment="Center"
                        Template="{StaticResource ConstructionProgressBar}"
						Visibility="{Binding [isUpping], Converter={StaticResource BoolToVis}}"
                        Value="{Binding [ageUpProgress]}" />
			</Grid>
			
			<DataTemplate.Triggers>
				<DataTrigger Binding="{Binding [isUpping]}" Value="true">
					<DataTrigger.EnterActions>
                    	<BeginStoryboard Name="ObserverUIAgeUpAnimation">
							<Storyboard>
								<DoubleAnimation
										Storyboard.TargetName="ObserverUIAgeUppingGlow"
										Storyboard.TargetProperty="Angle"
										From="0.0" To="360.0" Duration="0:0:4"
										RepeatBehavior="Forever" />
								<DoubleAnimation
										Storyboard.TargetName="ObserverUIAgeUppingCircle"
										Storyboard.TargetProperty="Angle"
										From="0.0" To="360.0" Duration="0:0:4"
										RepeatBehavior="Forever" />
							</Storyboard>
						</BeginStoryboard>
					</DataTrigger.EnterActions>
					<DataTrigger.ExitActions>
						<StopStoryboard BeginStoryboardName="ObserverUIAgeUpAnimation"/>
					</DataTrigger.ExitActions>
				</DataTrigger>
			</DataTemplate.Triggers>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUICivSpecifics">
			<Grid Visibility="{Binding [civSpecifics][visible], Converter={StaticResource BoolToVis}}">
				<ContentControl	Width="80"
						ContentTemplate="{StaticResource ObserverUIBackgroundAndBorder}"
						Content="{Binding}"/>
				
				<Grid Width="80">
	                <Grid.ColumnDefinitions>
	                    <ColumnDefinition Width="30" />
	                    <ColumnDefinition Width="4" />
	                    <ColumnDefinition Width="*" />
	                </Grid.ColumnDefinitions>
					
	                <Image Grid.Column="0"
	                        Height="30" HorizontalAlignment="Center" VerticalAlignment="Center"
	                        Source="{Binding [civSpecifics][icon]}"/>
	                <TextBlock Grid.Column="2"
	                        VerticalAlignment="Center"
	                        Style="{StaticResource nHUDBaseHeavyTextBlockStyle}"
	                        Text="{Binding [civSpecifics][text]}" />
				</Grid>
			</Grid>
		</DataTemplate>
		
		<DataTemplate x:Key="ObserverUIMessageAgingUpTimeDifferenceBetween">
			<DockPanel>
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
						Foreground="{Binding [secondPlayerColor]}"
                    	Text="{Binding [secondPlayerName]}" />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text=" reached " />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text="{Binding [age]}" />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text=" " />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
						Foreground="{DynamicResource Gray80Brush}"
                    	Text="{Binding [timeDifference], Converter={StaticResource ShorthandTimeFormat}}" />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text=" after " />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
						Foreground="{Binding [firstPlayerColor]}"
                    	Text="{Binding [firstPlayerName]}" />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text="." />
			</DockPanel>
		</DataTemplate>
		<DataTemplate x:Key="ObserverUIMessageAgingUpCanAffordTime">
			<DockPanel>
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
						Foreground="{Binding [playerColor]}"
                    	Text="{Binding [playerName]}" />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text=" started aging up " />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
						Foreground="{DynamicResource Gray80Brush}"
                    	Text="{Binding [timeDifference], Converter={StaticResource ShorthandTimeFormat}}" />
				<TextBlock Style="{StaticResource HUDWhiteBodyTextBlock18ptSemiBoldStyle}"
                    	Text=" after they first could afford to." />
			</DockPanel>
		</DataTemplate>
	</Grid.Resources>
	
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="200" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="2*" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		
		<Grid	Grid.Column="0"
		        VerticalAlignment="Top">
			
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				
				<ContentControl	ContentTemplate="{StaticResource ObserverUIBackgroundAndBorder}" Content="{Binding [player1]}"/>
				<Image	HorizontalAlignment="Right"
						OpacityMask="{StaticResource ObserverUIBrushOpaqueLeftToRight}"
						Source="{Binding [player1][civImage]}"
						Height="82" />
				
				<Grid Margin="2,2,2,2" HorizontalAlignment="Left">
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					
					<ContentControl
							ContentTemplate="{StaticResource ObserverUIResourcesFWGS}"
							Content="{Binding [player1]}"
							Visibility="{Binding [symmetricalUi], Converter={StaticResource InvBoolToVis}}"/>
					<ContentControl
							ContentTemplate="{StaticResource ObserverUIResourcesSWGF}"
							Content="{Binding [player1]}" 
							Visibility="{Binding [symmetricalUi], Converter={StaticResource BoolToVis}}"/>
					
					<Rectangle Grid.Row="1" Fill="#616C8C" Height="1.2" Margin="10,0,10,4"/>
					
					<ContentControl	Grid.Row="2"
							ContentTemplate="{StaticResource ObserverUIPopulation}"
							Content="{Binding [player1]}"
							Visibility="{Binding [symmetricalUi], Converter={StaticResource InvBoolToVis}}"/>
					<ContentControl	Grid.Row="2"
							ContentTemplate="{StaticResource ObserverUIPopulationReverse}"
							Content="{Binding [player1]}"
							Visibility="{Binding [symmetricalUi], Converter={StaticResource BoolToVis}}"/>
					
					<ContentControl	Grid.Column="1" Grid.RowSpan="3" 
							Margin="0,0,10,0"
							HorizontalAlignment="Center" VerticalAlignment="Center"
							ContentTemplate="{StaticResource ObserverUIAge}"
							Content="{Binding [player1]}" />
					
					<ContentControl Grid.Column="2" Grid.RowSpan="3"
							ContentTemplate="{StaticResource ObserverUIName}"
							Content="{Binding [player1]}" />
				</Grid>
				
				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					
					<ContentControl	Grid.Column="0" HorizontalAlignment="Left"
							ContentTemplate="{StaticResource ObserverUICivSpecifics}"
							Content="{Binding [player1]}"/>
					
					<ContentControl	Grid.Column="1" HorizontalAlignment="Right"
							ContentTemplate="{StaticResource ObserverUIUnits}"
							Content="{Binding [player1][unitsWorkers]}" />
					
					<ContentControl	Grid.Column="2" HorizontalAlignment="Right"
							Margin="0,0,-2,0"
							ContentTemplate="{StaticResource ObserverUIUnits}"
							Content="{Binding [player1][units]}" />
				</Grid>
				
				<Grid Grid.Row="2">
					<ContentControl	HorizontalAlignment="Left"
							ContentTemplate="{StaticResource ObserverUIUpgradesQueued}"
							Content="{Binding [player1]}" />
					<ContentControl	HorizontalAlignment="Right"
							ContentTemplate="{StaticResource ObserverUiVictoryCountdowns}"
							Content="{Binding [TeamSummaryLeft]}" />
				</Grid>
				
			</Grid>
		</Grid>
		
		<Grid	Grid.Column="2" 
		        VerticalAlignment="Top">
			
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
			
				<ContentControl	ContentTemplate="{StaticResource ObserverUIBackgroundAndBorder}" Content="{Binding [player2]}"/>
				<Image	HorizontalAlignment="Left"
						OpacityMask="{StaticResource ObserverUIBrushOpaqueRightToLeft}"
						Source="{Binding [player2][civImage]}"
						Height="82"/>
				
				<Grid Margin="2,2,2,2" HorizontalAlignment="Right">
					<Grid.RowDefinitions>
						<RowDefinition Height="*" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
						<ColumnDefinition Width="Auto" />
					</Grid.ColumnDefinitions>
					
					<ContentControl	Grid.Column="2"
							HorizontalAlignment="Right"
							ContentTemplate="{StaticResource ObserverUIResourcesFWGS}"
							Content="{Binding [player2]}"
							Visibility="{Binding [symmetricalUi], Converter={StaticResource InvBoolToVis}}"/>
					<ContentControl	Grid.Column="2"
							HorizontalAlignment="Right"
							ContentTemplate="{StaticResource ObserverUIResourcesFGWS}"
							Content="{Binding [player2]}"
							Visibility="{Binding [symmetricalUi], Converter={StaticResource BoolToVis}}"/>
					
					<Rectangle Grid.Column="2" Grid.Row="1" Fill="#616C8C" Height="1.2" Margin="10,0,10,4"/>
					
					<ContentControl	Grid.Column="2"	Grid.Row="2"
							ContentTemplate="{StaticResource ObserverUIPopulation}"
							Content="{Binding [player2]}" />
					
					<ContentControl	Grid.Column="1" Grid.RowSpan="3" 
							Margin="10,0,0,0"
							HorizontalAlignment="Center" VerticalAlignment="Center"
							ContentTemplate="{StaticResource ObserverUIAge}"
							Content="{Binding [player2]}" />
					
					<ContentControl Grid.RowSpan="3"
							ContentTemplate="{StaticResource ObserverUIName}"
							Content="{Binding [player2]}" />
				</Grid>
				
				<Grid Grid.Row="1">
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="Auto"/>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					
					<ContentControl	Grid.Column="2" HorizontalAlignment="Left"
							ContentTemplate="{StaticResource ObserverUICivSpecifics}"
							Content="{Binding [player2]}"/>
					
					<ContentControl	Grid.Column="1" HorizontalAlignment="Left"
							ContentTemplate="{StaticResource ObserverUIUnits}"
							Content="{Binding [player2][unitsWorkers]}" />
	
					<ContentControl	Grid.Column="0" HorizontalAlignment="Left"
							 Margin="-2,0,0,0"
							ContentTemplate="{StaticResource ObserverUIUnits}"
							Content="{Binding [player2][units]}" />
				</Grid>
				
				<Grid Grid.Row="2">
					<ContentControl	HorizontalAlignment="Right"
							ContentTemplate="{StaticResource ObserverUIUpgradesQueued}"
							Content="{Binding [player2]}" />
					
					<ContentControl	HorizontalAlignment="Left"
							ContentTemplate="{StaticResource ObserverUiVictoryCountdowns}"
							Content="{Binding [TeamSummaryRight]}" />
				</Grid>
			</Grid>
		</Grid>
		
	    <ItemsControl
				Grid.Row="1" Grid.ColumnSpan="3"
				HorizontalAlignment="Center"
				VerticalAlignment="Top"
				IsHitTestVisible="False"
				ItemsSource="{Binding [messages]}">
	        <ItemsControl.ItemsPanel>
	            <ItemsPanelTemplate>
	                <DockPanel/>
	            </ItemsPanelTemplate>
	        </ItemsControl.ItemsPanel>
			
		    <ItemsControl.ItemContainerStyle>
		      	<Style TargetType="ContentPresenter">
		        	<Setter Property="DockPanel.Dock" Value="Top"/>
		      	</Style>
		    </ItemsControl.ItemContainerStyle>
	
	        <ItemsControl.ItemTemplate>
	            <DataTemplate>
					<ContentControl Name="ObserverUIMessage"
							Content="{Binding}"/>
					
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding [messageType]}" Value="ObserverUIMessageAgingUpTimeDifferenceBetween">
							<Setter TargetName="ObserverUIMessage" Property="ContentTemplate" Value="{StaticResource ObserverUIMessageAgingUpTimeDifferenceBetween}"/>
						</DataTrigger>
						<DataTrigger Binding="{Binding [messageType]}" Value="ObserverUIMessageAgingUpCanAffordTime">
							<Setter TargetName="ObserverUIMessage" Property="ContentTemplate" Value="{StaticResource ObserverUIMessageAgingUpCanAffordTime}"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ItemsControl.ItemTemplate>
		</ItemsControl>
	</Grid>
	
	<Grid Margin="0,620,0,0"
        	HorizontalAlignment="Left"
        	VerticalAlignment="Top">
	
	    <Decorator Name="EfficiencyStatisticsHeightRatioProxy"
	               Height="1"
	               Visibility="Hidden" />
	    <Decorator Name="EfficiencyStatisticsHeightProxy" Visibility="Hidden">
	        <Decorator.Height>
	            <MultiBinding Converter="{StaticResource MultiLerp}">
	                <Binding ElementName="EfficiencyStatisticsHeightRatioProxy" Path="Height" />
	                <Binding ElementName="EfficiencyStatisticsExpanderButton" Path="ActualHeight" />
	                <Binding ElementName="EfficiencyStatisticsStatisticsCanvas" Path="Height" />
	            </MultiBinding>
	        </Decorator.Height>
	    </Decorator>
	    <Decorator Name="EfficiencyStatisticsWidthProxy" Visibility="Hidden">
	        <Decorator.Width>
	            <MultiBinding Converter="{StaticResource MultiLerp}">
	                <Binding ElementName="EfficiencyStatisticsHeightRatioProxy" Path="Height" />
	                <Binding ElementName="EfficiencyStatisticsExpanderButton" Path="ActualWidth" />
	                <Binding ElementName="EfficiencyStatisticsStatisticsCanvas" Path="Width" />
	            </MultiBinding>
	        </Decorator.Width>
	    </Decorator>
		
		<Grid Width="{Binding ElementName=EfficiencyStatisticsWidthProxy, Path=Width}" 
	            Height="{Binding ElementName=EfficiencyStatisticsHeightProxy, Path=Height}"
	            HorizontalAlignment="Left"
	            VerticalAlignment="Top">
	
		    <Grid ClipToBounds="True">
	            <Canvas Name="EfficiencyStatisticsStatisticsCanvas"
	                    Width="{Binding ElementName=EfficiencyStatisticsStatisticsInnerGrid, Path=ActualWidth}"
	                    Height="{Binding ElementName=EfficiencyStatisticsStatisticsInnerGrid, Path=ActualHeight}"
	                    ClipToBounds="True">
	                <Grid x:Name="EfficiencyStatisticsStatisticsInnerGrid">
	                    <Grid.ColumnDefinitions>
	                        <ColumnDefinition Width="3" />
	                        <ColumnDefinition Width="160" />
	                        <ColumnDefinition Width="4" />
	                        <ColumnDefinition Width="80" />
	                        <ColumnDefinition Width="4" />
	                        <ColumnDefinition Width="80" />
	                        <ColumnDefinition Width="4" />
	                        <ColumnDefinition Width="80" />
	                        <ColumnDefinition Width="4" />
	                        <ColumnDefinition Width="80" />
	                        <ColumnDefinition Width="4" />
	                        <ColumnDefinition Width="80" />
	                        <ColumnDefinition Width="3" />
	                    </Grid.ColumnDefinitions>
	                    <Grid.RowDefinitions>
	                        <RowDefinition Height="Auto" />
	                        <RowDefinition Height="Auto" />
	                        <RowDefinition Height="4" />
	                        <RowDefinition Height="Auto" />
	                        <RowDefinition Height="Auto" />
	                        <RowDefinition Height="3" />
	                    </Grid.RowDefinitions>
	
	                    <Rectangle Fill="#80000000" Grid.Column="2" Grid.ColumnSpan="11" Grid.RowSpan="2"/>
	                    <Rectangle Fill="#80000000" Grid.Row="2" Grid.ColumnSpan="13" Grid.RowSpan="4"/>
	
					    <Rectangle Grid.Column="2" Grid.Row="2" Grid.RowSpan="4" Fill="#808080" Width="2"/>
	                    <Rectangle Grid.Column="4" Grid.Row="1" Grid.RowSpan="5" Fill="#808080" Width="2"/>
					    <Rectangle Grid.Column="6" Grid.Row="0" Grid.RowSpan="6" Fill="#808080" Width="2"/>
	                    <Rectangle Grid.Column="8" Grid.Row="0" Grid.RowSpan="6" Fill="#808080" Width="2"/>
	                    <Rectangle Grid.Column="10" Grid.Row="1" Grid.RowSpan="5" Fill="#808080" Width="2"/>
	                    
	                    <Border Grid.Row="2" Grid.ColumnSpan="13" Grid.RowSpan="2" 
	                            BorderBrush="{Binding [player1][color]}" 
	                            BorderThickness="2,2,2,0"/>
	                    <Border Grid.Row="4" Grid.ColumnSpan="13" Grid.RowSpan="2" 
	                            BorderBrush="{Binding [player2][color]}" 
	                            BorderThickness="2,0,2,2"/>
	        
	                    <TextBlock Grid.Column="3" Grid.ColumnSpan="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="Efficiency"/>
	                    <TextBlock Grid.Column="3" Grid.ColumnSpan="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="Idle Time"/>
	                    <TextBlock Grid.Column="3" Grid.Row="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="TC"/>
	                    <TextBlock Grid.Column="5" Grid.Row="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="Worker"/>
	                    <TextBlock Grid.Column="7" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="Pop"/>
	                    <TextBlock Grid.Column="7" Grid.Row="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="Capped"/>
	                    <TextBlock Grid.Column="9" Grid.ColumnSpan="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="Deaths"/>
	                    <TextBlock Grid.Column="9" Grid.Row="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="Eco"/>
	                    <TextBlock Grid.Column="11" Grid.Row="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="Military"/>
	        
	                    <TextBlock Grid.Row="3" Grid.Column="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="{Binding [player1][name]}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="{Binding [player1][TownCenterEfficiency]}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="{Binding [player1][TownCenterIdleTime], Converter={StaticResource ShorthandTimeFormat}}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="5" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="{Binding [player1][WorkerEfficiency]}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="5" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="{Binding [player1][WorkerIdleTime], Converter={StaticResource ShorthandTimeFormat}}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="7" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="{Binding [player1][PopulationCapped][Percent]}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="7" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="{Binding [player1][PopulationCapped][Time], Converter={StaticResource ShorthandTimeFormat}}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="9" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="{Binding [player1][SquadLossesContext][Worker], Converter={StaticResource CastToIntOperator}}"/>
	                    <TextBlock Grid.Row="3" Grid.Column="11" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="{Binding [player1][SquadLossesContext][Military], Converter={StaticResource CastToIntOperator}}"/>
	                    
	                    <TextBlock Grid.Row="4" Grid.Column="1" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="{Binding [player2][name]}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="{Binding [player2][TownCenterEfficiency]}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="3" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="{Binding [player2][TownCenterIdleTime], Converter={StaticResource ShorthandTimeFormat}}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="5" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="{Binding [player2][WorkerEfficiency]}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="5" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="{Binding [player2][WorkerIdleTime], Converter={StaticResource ShorthandTimeFormat}}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="7" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource BoolToVis}}"
	                            Text="{Binding [player2][PopulationCapped][Percent]}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="7" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Visibility="{Binding [ShowEfficiencyStatisticsInPercent], Converter={StaticResource InvBoolToVis}}"
	                            Text="{Binding [player2][PopulationCapped][Time], Converter={StaticResource ShorthandTimeFormat}}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="9" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="{Binding [player2][SquadLossesContext][Worker], Converter={StaticResource CastToIntOperator}}"/>
	                    <TextBlock Grid.Row="4" Grid.Column="11" HorizontalAlignment="Right"
	                            Style="{StaticResource HUDGray80BodyTextBlock18ptStyle}"
	                            Text="{Binding [player2][SquadLossesContext][Military], Converter={StaticResource CastToIntOperator}}"/>
	                    
	                    <Button Opacity="0" 
	                            Grid.Column="2" Grid.ColumnSpan="11" Grid.RowSpan="2"
	                            Command="{Binding [EfficiencyStatisticsDisplayModeCommand]}"/>
	                    <Button Opacity="0" 
	                            Grid.Row="2" Grid.ColumnSpan="13" Grid.RowSpan="4"
	                            Command="{Binding [EfficiencyStatisticsDisplayModeCommand]}"/>
	                </Grid>
	            </Canvas>

		        <ToggleButton x:Name="EfficiencyStatisticsExpanderButton"
		                HorizontalAlignment="Left"
		                VerticalAlignment="Top"
		                IsChecked="True"
		                Style="{StaticResource HUDExpanderToggleButtonWithBorderStyle}">
		            <ToggleButton.Resources>
		                <sys:Double x:Key="ExpandedToggleButtonGridAngleMin">45</sys:Double>
		                <sys:Double x:Key="ExpandedToggleButtonGridAngleMax">225</sys:Double>
		            </ToggleButton.Resources>
		        </ToggleButton>
		    </Grid>
		</Grid>
		
	    <Grid.Triggers>
	        <EventTrigger RoutedEvent="ToggleButton.Unchecked" SourceName="EfficiencyStatisticsExpanderButton">
	            <BeginStoryboard>
	                <Storyboard>
	                    <DoubleAnimation BeginTime="0:0:0"
	                                     EasingFunction="{StaticResource CircleEaseOut}"
	                                     Storyboard.TargetName="EfficiencyStatisticsHeightRatioProxy" Storyboard.TargetProperty="Height"
	                                     To="0" Duration="0:0:0.25" />
	                </Storyboard>
	            </BeginStoryboard>
	        </EventTrigger>
	        <EventTrigger RoutedEvent="ToggleButton.Checked" SourceName="EfficiencyStatisticsExpanderButton">
	            <EventTrigger.EnterActions />
	            <BeginStoryboard>
	                <Storyboard>
	                    <DoubleAnimation BeginTime="0:0:0"
	                                     EasingFunction="{StaticResource CircleEaseOut}"
	                                     Storyboard.TargetName="EfficiencyStatisticsHeightRatioProxy" Storyboard.TargetProperty="Height"
	                                     To="1" Duration="0:0:0.25" />
	                </Storyboard>
	            </BeginStoryboard>
	        </EventTrigger>
	    </Grid.Triggers>
	</Grid>
</Grid>
]]